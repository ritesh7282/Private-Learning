name: PRAT-CTAP-Jfrog-ECR-Dev

on:
  workflow_dispatch:
    inputs:
      AWS_Region:
        type: choice
        description: 'AWS Region'
        required: true
        options: 
        - eu-west-1
      
      SOURCE_ENVIRONMENT:
        type: choice
        description: 'Select Source Environment'
        required: true
        options: 
        - dev-ecr   
      
      TARGET_ENVIRONMENT:
        type: choice
        description: 'Select Target Environment'
        required: true
        options: 
        - jfrog       

      ARTIFACTORY_URL:
        description: 'Provide Jfrog Artifactory URL'
        required: true
        default: 'https://prat-ctap-shared-market-dev.dock.merck.com'

      ARTIFACTORY_REPO:
        description: 'Provide Jfrog Artifactory Repository'
        required: true
        default: 'prat-ctap-shared-market-dev.dock.merck.com'
      
      ECR_REPOSITORY_INPUT:
        description: 'Provide ECR REpository name eg prat-ctap-united-states'
        required: true
        default: ''

      ECR_IMAGE_TAG_INPUT:
        description: 'Provide Image Tag eg all-product-ctap-destination-v2'
        required: true
        default: ''


jobs:

  build:  
    runs-on: ubuntu-latest
    env:
      Docker_Config: /opt/jenkins/workspace/container-test/docker_config
      
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        aws-version: latest
    - run: aws --version

    - name: Working with the ECR Repository variables
      run: |
        ECR_REPOSITORY=$(echo ${{inputs.ECR_REPOSITORY_INPUT}} | sed 's/_/-/g')
        echo "$ECR_REPOSITORY" 
        echo "ECR_REPOSITORY=$ECR_REPOSITORY" >> $GITHUB_ENV


    - name: Working with the ECR Repository variables
      run: |
        ECR_IMAGE_TAG=$(echo ${{inputs.ECR_IMAGE_TAG_INPUT}} | sed 's/_/-/g')
        echo "$ECR_IMAGE_TAG" 
        echo "ECR_IMAGE_TAG=$ECR_IMAGE_TAG" >> $GITHUB_ENV

    - name: Accesssing all the variables 
      run: |
        echo "${{env.ECR_REPOSITORY}}"
        echo "${{env.ECR_IMAGE_TAG}}"
        aws --version


    - name: Build the Docker image
      run: |
        echo "${{env.AWS_Credentials}}"
        echo "${{env.Docker_Config}}"
        echo "${{inputs.AWS_Region}}"

    - name: Replacing variable
      run: |
        echo "${{inputs.AWS_Region}} | sed 's/-/_/g'"
        Region=$(echo ${{inputs.AWS_Region}} | sed 's/-/_/g')
        echo "$Region"
        echo "Region=$Region" >> $GITHUB_ENV
        echo "${{ env.Region }}"

    - name: Working on Github output
      id: vars
      run: |
        Reg="e-u-t"
        Reg=$(echo $Reg | sed 's/-/_/g')
        echo "$Reg"
        echo "Reg=$Reg" >> $GITHUB_OUTPUT

    - name: Accesing variable
      run: |
        echo "${{env.Region}}"
        echo "${{steps.vars.outputs.Reg}}"
